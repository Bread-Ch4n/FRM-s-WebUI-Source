name: Build WebUI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH

      - name: Cache Next.js build and Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-

      - name: Disable Next.js telemetry
        run: bunx next telemetry disable

      - name: Install dependencies with Bun
        run: bun install

      - name: Build project with Bun
        run: bun run build

      - name: Rename output folder
        run: mv ./out ./www

      - name: Upload Artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: www
          path: ./www

  notify:
    name: Notify Discord
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord Embed
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          echo "Fetching artifact info..."
          ARTIFACTS=$(gh api /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts)
          ARTIFACT_NAME=$(echo "$ARTIFACTS" | jq -r '.artifacts[0].name')
          ARTIFACT_URL=$(echo "$ARTIFACTS" | jq -r '.artifacts[0].archive_download_url')

          if [ "$ARTIFACT_URL" = "null" ]; then
            ARTIFACT_FIELD="{\"name\": \"Artifact\", \"value\": \"‚ùå No artifact found.\"}"
          else
            ARTIFACT_FIELD="{\"name\": \"Artifact\", \"value\": \"[üì¶ Download $ARTIFACT_NAME]($ARTIFACT_URL)\"}"
          fi

          echo "Sending to Discord..."
          curl -X POST "$DISCORD_WEBHOOK" \
            -H "Content-Type: application/json" \
            -d "{
              \"username\": \"GitHub Actions\",
              \"avatar_url\": \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",
              \"embeds\": [{
                \"title\": \"‚úÖ WebUI Build Succeeded\",
                \"description\": \"A new build artifact has been uploaded for **${{ github.repository }}**.\",
                \"url\": \"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\",
                \"color\": 3066993,
                \"fields\": [
                  $ARTIFACT_FIELD,
                  {\"name\": \"Branch\", \"value\": \"${{ github.ref_name }}\", \"inline\": true},
                  {\"name\": \"Commit\", \"value\": \"[${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})\", \"inline\": true}
                ],
                \"footer\": {
                  \"text\": \"GitHub Actions ‚Ä¢ $(date -u +'%Y-%m-%d %H:%M UTC')\"
                }
              }]
            }"
